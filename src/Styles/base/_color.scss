@use "../abstracts/" as *;
@use "sass:string";

//? Prevent Hsl to transform in Hex.
@function hsl($h, $s, $l) {
	@return unquote("hsl(#{$h}, #{$s}, #{$l})");
}

//? Color base
$cb: 0;

$colors: (
	//& Surface
	"surface-#{$cb}": hsl(210, 11%, 2%),
	"surface-#{$cb+1}": hsl(210, 11%, 7%),
	"surface-#{$cb+2}": hsl(210, 11%, 15%),
	"surface-#{$cb+3}": hsl(210, 11%, 23%),
	//& Text
	"text-#{$cb}": hsl(0, 0%, 95%),
	"text-#{$cb+1}": hsl(0, 0%, 85%),
	"text-#{$cb+2}": hsl(0, 0%, 70%),
	//& Brand -> Start from the middle.
	"brand-#{$cb+5}": hsl(0, 100%, 71%)
);

:root {
	@each $p, $v in $colors {
		--clr-#{$p}: #{$v};

		$compose-hls-individuals: string.slice(
			$string: $v,
			$start-at: 5,
			$end-at: -2,
		);

		--clra-#{$p}: #{$compose-hls-individuals};
	}
}
